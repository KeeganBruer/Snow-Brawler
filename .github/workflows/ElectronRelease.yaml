name: 'Electron Release'
on:
  workflow_dispatch:
    inputs:
      version:
        required: true

jobs:
  create_release:
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: electronrelease_${{github.run_number}}_${{ github.run_attempt }}
        release_name: Release ${{ github.event.inputs.version }}
        body_path: RELEASE.md
        draft: false
        prerelease: false
  build_on_win:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@master
      with:
        node-version: 21.3.0
    - name: install dependencies
      working-directory: ./Electron
      run: npm install
    - name: build
      working-directory: ./Electron
      run: npm run package
    - name: check dir
      run: |
        dir
        dir ./Electron
        dir ./Electron/out
    - uses: vimtor/action-zip@v1.1
      with:
        files: ./Electron/out/Malicaistower-win32-x64/
        dest: ./Windows.zip
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ jobs.create_release.steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./Windows.zip
        asset_name: MalicaisTower-Windows.zip
        asset_content_type: application/zip
  build_on_linux:
    runs-on: ubuntu-latest

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v1

    - name: Install Node.js & NPM
      uses: actions/setup-node@v2
      with:
        node-version: '14.2.0'
    - name: install dependencies
      working-directory: ./Electron
      run: npm install
    - name: build
      working-directory: ./Electron
      run: |
        npm run package
        npm run package -- --platform=darwin
    - name: check dir
      run: |
        dir
        dir ./Electron
        dir ./Electron/out